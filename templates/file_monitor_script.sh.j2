#!/bin/bash

# Path to the configuration file
CONFIG_FILE="{{ config_directory }}/file_action_mapping.yml"

# Function to read YAML file using Python
read_yaml() {
    python -c "import yaml; import sys; print(yaml.safe_load(sys.stdin.read())$1)"
}


# Monitoring loop
inotifywait -m -e modify --format '%w%f' -q $(jq -r '.file_actions[].name' $CONFIG_FILE) | while read action_name; do
    ACTION=$(jq -r --arg action_name "$action_name" '.file_actions[] | select(.name == $action_name)' $CONFIG_FILE)
    GIT_REPO=$(echo "$ACTION" | jq -r '.git_repo')
    GIT_REPO_DEST=$(echo "$ACTION" | jq -r '.git_repo_dest')
    PLAYBOOK_PATH=$(echo "$ACTION" | jq -r '.playbook')
    VARS_FILE=$(echo "$ACTION" | jq -r '.vars_file')

    if [ -n "$GIT_REPO" ] && [ -n "$PLAYBOOK_PATH" ]; then
        if [ -n "$GIT_REPO_DEST" ]; then
            GIT_REPO_DEST=$(mktemp -d)
        fi
        # GIT_REPO_DEST=$(mktemp -d)
        git clone $GIT_REPO $GIT_REPO_DEST

        # Include vars file if specified
        EXTRA_VARS=""
        if [ -n "$VARS_FILE" ]; then
            EXTRA_VARS="-e @$VARS_FILE"
        fi

        ansible-playbook --connection=local $GIT_REPO_DEST/$PLAYBOOK_PATH $EXTRA_VARS

        # rm -rf $TEMP_REPO_DIR # at the moment let us keep the playbook repo I renamed this to actual parameter GIT_REPO_DEST
    fi
done

